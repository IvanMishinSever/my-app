{"version":3,"sources":["logo.svg","animals.js","App.js","reportWebVitals.js","index.js"],"names":["animals","dolphin","image","facts","lobster","starfish","background","className","alt","src","images","animal","push","onClick","displayFact","aria-label","role","e","aim","target","console","log","style","visibility","optionIndex","Math","floor","random","length","document","getElementById","innerHTML","App","logo","href","rel","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"8KAAe,G,KAAA,IAA0B,kCCA5BA,G,MAAU,CACrBC,QAAS,CAEPC,MAAO,6BACPC,MAAO,CAAC,iEAAkE,mDAAoD,gCAEhIC,QAAS,CACPF,MAAO,6BACPC,MAAO,CAAC,kCAAmC,qCAAsC,4CAEnFE,SAAU,CACRH,MAAO,8BACPC,MAAO,CAAC,mCAAoC,uCAAwC,8CCRlFG,EAAa,qBAAKC,UAAU,aAAaC,IAAI,QAAQC,IAAI,6BAG3DC,EAAS,GAEb,IAAK,IAAMC,KAAUX,EACrBU,EAAOE,KAAK,qBAAKC,QAASC,EAA0BP,UAAU,SAASC,IAAKG,EAAQF,IAAKT,EAAQW,GAAQT,MAAOa,aAAYJ,EAAQK,KAAK,UAA7FL,IAI5C,SAASG,EAAYG,GACnB,IAAIC,EAAMD,EAAEE,OAAOX,IACnBY,QAAQC,IAAIJ,EAAEE,QACbF,EAAEE,OAAOG,MAAMC,WAAa,SAC7B,IAAMC,EAAcC,KAAKC,MAAMD,KAAKE,SAAW3B,EAAQkB,GAAKf,MAAMyB,QAClER,QAAQC,IAAIrB,EAAQkB,IACnBW,SAASC,eAAe,QAAQC,UAAY/B,EAAQkB,GAAKf,MAAMqB,GAiCnDQ,MA3Bf,WACE,OACE,sBAAKzB,UAAU,MAAf,UACqBD,EACnB,yBAAQC,UAAU,aAAlB,UACE,qBAAKE,IAAKwB,EAAM1B,UAAU,WAAWC,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACED,UAAU,WACV2B,KAAK,sBACLf,OAAO,SACPgB,IAAI,sBAJN,4BAUF,mBAAGC,GAAG,SACN,sBAAK7B,UAAU,UAAf,UAA0BG,EAAO,GAAIA,EAAO,GAAIA,EAAO,MACvD,6BAAmB,uCCnCV2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASC,eAAe,SAM1BO,K","file":"static/js/main.48a1b4f8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","export const animals = {\r\n  dolphin: {\r\n    // /animals_facts/ изначально требовалось без добаления этого пути\r\n    image: '/my-app/images/dolphin.jpg',\r\n    facts: ['Dolphins have been shown to give distinct names to each other!', 'Dolphins are known to display their own culture!', 'Dolphins have two stomachs!']\r\n  },\r\n  lobster: {\r\n    image: '/my-app/images/lobster.jpg',\r\n    facts: ['Lobsters taste with their legs!', 'Lobsters chew with their stomachs!', 'Lobsters can live as long as 100 years.']\r\n  },\r\n  starfish: {\r\n    image: '/my-app/images/starfish.jpg',\r\n    facts: ['Starfish can have up to 40 arms!', 'Starfish have no brain and no blood!', 'Starfish can regenerate their own arms!']\r\n  }\r\n};","import logo from './logo.svg';\nimport './App.css';\nimport { animals } from './animals';\n\nconst background = <img className=\"background\" alt=\"ocean\" src=\"/my-app/images/ocean.jpg\"/>\nconst showBackground = true;\nconst title = '';\nlet images = [];\n\nfor (const animal in animals) {\nimages.push(<img onClick={displayFact} key={animal} className='animal' alt={animal} src={animals[animal].image} aria-label={animal} role='button'/>\n);\n}\n\nfunction displayFact(e) {\n  let aim = e.target.alt;\n  console.log(e.target);\n   e.target.style.visibility = 'hidden';\n  const optionIndex = Math.floor(Math.random() * animals[aim].facts.length);\n  console.log(animals[aim]);\n   document.getElementById('fact').innerHTML = animals[aim].facts[optionIndex];\n}\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {showBackground && background}\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n\n      <p id='fact'></p>\n      <div className='animals'>{images[2]}{images[1]}{images[0]}</div>\n      <h1>{title === '' ?'Click an animal for a fun fact' : title}</h1>\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}